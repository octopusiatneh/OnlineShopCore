@model SearchResultViewModel
@{
    ViewData["Title"] = "Default";
}

<div class="bg0 m-t-23 p-b-140">
    <div class="container">
        <div class="flex-w flex-sb-m p-b-52">
            <div class="flex-w flex-l-m filter-tope-group m-tb-10">
                <button class="stext-106 cl6 hov1 bor3 trans-04 m-r-32 m-tb-5 how-active1" data-filter="*">
                    All
                </button>

                @foreach (var item in Model.ProductCategory)
                {
                    <button class="stext-106 cl6 hov1 bor3 trans-04 m-r-32 m-tb-5" data-filter=".@item.Id">
                        @item.Name
                    </button>
                }
            </div>
            <!--filter and search-->
            @await  Component.InvokeAsync("FilterAndSearch")
        </div>

        <div class="row isotope-grid">
            @foreach (var item in Model.Product.Results)
            {
                var url = item.SeoAlias + "-p-" + item.Id + ".html";
                <div class="col-sm-6 col-md-4 col-lg-3 p-b-35 isotope-item @item.CategoryId">
                    <!-- Block2 -->
                    <div class="block2">
                        <div class="block2-pic hov-img0">
                            <a href="@url">
                                <img src="@item.Image" alt="IMG-PRODUCT">
                            </a>

                        </div>

                        <div class="block2-txt flex-w flex-t p-t-14">
                            <div class="block2-txt-child1 flex-col-l ">

                                <a href="@url" class="stext-104 cl4 hov-cl1 trans-04 js-name-b2 p-b-6">
                                    @item.Name
                                </a>

                                <span class="stext-105 cl3">
                                    @if (item.PromotionPrice.HasValue)
                                    {
                                        <strike>@Html.Raw("&#36;")@item.Price</strike> @Html.Raw("&#36;")@item.PromotionPrice
                                    }
                                    else
                                    {
                                        @Html.Raw("&#36;") @item.Price
                                    }

                                </span>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
        @(await Component.InvokeAsync("Pagination", Model.Product))
    </div>
</div>


