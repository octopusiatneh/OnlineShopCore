@using Microsoft.AspNetCore.Authorization
@using OnlineShopCore.Authorization
@inject IAuthorizationService AuthorizationService

@{
    ViewData["Title"] = "User List";
}

@section Styles{
    <link href="~/lib/jQuery-EasyUI/themes/bootstrap/easyui.css" rel="stylesheet" />
    <link href="~/lib/jQuery-EasyUI/themes/bootstrap/tree.css" rel="stylesheet" />
    <link href="~/admin-side/assets/extra-libs/DataTables/DataTables-1.10.16/css/dataTables.bootstrap4.css" rel="stylesheet" />

}

@section Scripts{
    <script>
       var RoleCheck = @Json.Serialize(((await AuthorizationService.AuthorizeAsync(User, "USER", Operations.Update)).Succeeded) || ((await AuthorizationService.AuthorizeAsync(User, "USER", Operations.Delete)).Succeeded))
    function loadData() {
                dataTable = $('#zero_config_1').DataTable({
                processing: true, // for show progress bar
            serverSide: false, // for process server side
            ajax: {
                    type: 'GET',
                url: '/admin/user/GetAll',
                dataSrc: '',
                dataType: 'json'
            },
            columnDefs: [{
                    targets: [0,3],
                autoWidth: false
            }],

            columnDefs: [{
                    targets: [0, 2, 4],
                sortable: false
            }],

            columns: [

            {
                    data: "Id", render: function (data, type, row) {
                        return '@if ((await AuthorizationService.AuthorizeAsync(User, "USER", Operations.Delete)).Succeeded) {<button data-id="' + data + '" class="btn btn-danger btn-delete"><i class="fas fa-trash"></i></button> } @if ((await AuthorizationService.AuthorizeAsync(User, "USER", Operations.Update)).Succeeded) {<button data-id="' + data + '" class="btn btn-success btn-edit"><i class="fas fa-pencil-alt"></i></button> }';
                    }, width: '11%', visible: RoleCheck
                },
                { data: "UserName" },
                { data: "FullName" },
                {
                    data: "Avatar", render: function (data, type, row) {
                            if (data == null) {
                                return '<img src="/admin-side/assets/images/users/No-image-found.jpg" width=35';
                            }
                            else {
                                return '<img src="' + data + '" width=35 />';
                            }
                            //return data != null ? '<img src="' + data + '" width=35 />' : '<img src="~/admin-side/assets/images/No-image-found.jpg" width=35'
                        }, width:'9%'
                },
                {
                    data: "DateCreated", render: function (data, type, row) {
                            return data = onlineshop.dateTimeFormatJson(data)
                            }
                    },
                {
                    data: "Status", render: function (data, type, row) {
                            return data = onlineshop.getStatus(data)
                            }
                    }
            ]
        });
            }
    </script>
    <script src="~/lib/jQuery-EasyUI/jquery.easyui.min.js"></script>
    <script src="~/admin-side/assets/extra-libs/DataTables/datatables.min.js"></script>
    <script src="~/app/controllers/user/index.js" asp-append-version="true"></script>
    <script>
        var userObj = new UserController();
        userObj.initialize();
    </script>
}


<div class="page-breadcrumb">
    <div class="row">
        <div class="col-12 d-flex no-block align-items-center">
            <div class="ml-auto text-left">
                <nav aria-label="breadcrumb">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item"><a href="#">Home</a></li>
                        <li class="breadcrumb-item active" aria-current="page">Products</li>
                    </ol>
                </nav>
            </div>
        </div>
    </div>
</div>

<div class="=container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="card-body">


                @if (((await AuthorizationService.AuthorizeAsync(User, "USER", Operations.Create)).Succeeded))
                {
                    <button class="btn btn-success" id="btnCreate" type="button" style="margin-bottom:15px">Create</button>
                }
                <div class="table-responsive">
                    <table id="zero_config_1" class="table table-striped table-bordered">
                        <thead>
                            <tr>
                                <th>Action</th>
                                <th>Account</th>
                                <th>Name</th>
                                <th>Avatar</th>
                                <th>Created Date</th>
                                <th>Status</th>
                            </tr>
                        </thead>

                        <tbody></tbody>

                        <tfoot>
                            <tr>
                                <th>Action</th>
                                <th>Account</th>
                                <th>Name</th>
                                <th>Avatar</th>
                                <th>Created Date</th>
                                <th>Status</th>
                            </tr>
                        </tfoot>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<script id="role-template" type="x-tmpl-mustache">
    <div class="checkbox">
        <label>
            <input type="checkbox" {{Checked}} value="{{Name}}" name="ckRoles">
            <span class="text">{{Description}}</span>
        </label>
    </div>
</script>
@Html.Partial("_AddEditModal.cshtml")